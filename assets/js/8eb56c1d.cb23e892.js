"use strict";(self.webpackChunkblogsaurus=self.webpackChunkblogsaurus||[]).push([[8320],{3905:(e,n,t)=>{t.d(n,{Zo:()=>i,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},i=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),d=l(t),k=a,f=d["".concat(s,".").concat(k)]||d[k]||p[k]||o;return t?r.createElement(f,u(u({ref:n},i),{},{components:t})):r.createElement(f,u({ref:n},i))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,u=new Array(o);u[0]=k;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[d]="string"==typeof e?e:a,u[1]=c;for(var l=2;l<o;l++)u[l]=t[l];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},8107:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>u,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:22},u="22. [BackEnd] \uc778\uc99d \ubbf8\ub4e4\uc6e8\uc5b4\uc640 \uc778\uac00 \uaddc\uce59",c={unversionedId:"backend-master/backend23",id:"backend-master/backend23",title:"22. [BackEnd] \uc778\uc99d \ubbf8\ub4e4\uc6e8\uc5b4\uc640 \uc778\uac00 \uaddc\uce59",description:"\ubaa9\ud45c",source:"@site/docs/backend-master/backend23.md",sourceDirName:"backend-master",slug:"/backend-master/backend23",permalink:"/docs/backend-master/backend23",draft:!1,tags:[],version:"current",sidebarPosition:22,frontMatter:{sidebar_position:22},sidebar:"backSidebar",previous:{title:"22. [BackEnd] PASETO & JWT \ub97c \uc774\uc6a9\ud55c \ub85c\uadf8\uc778",permalink:"/docs/backend-master/backend22"}},s={},l=[{value:"\ubaa9\ud45c",id:"\ubaa9\ud45c",level:2},{value:"\ubbf8\ub4e4\uc6e8\uc5b4",id:"\ubbf8\ub4e4\uc6e8\uc5b4",level:2},{value:"authMiddleware",id:"authmiddleware",level:3},{value:"server.go",id:"servergo",level:3},{value:"\uc778\uc99d \uaddc\uce59",id:"\uc778\uc99d-\uaddc\uce59",level:2},{value:"create account",id:"create-account",level:3},{value:"get account",id:"get-account",level:3},{value:"list account",id:"list-account",level:3},{value:"transfer money",id:"transfer-money",level:3}],i={toc:l},d="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"22-backend-\uc778\uc99d-\ubbf8\ub4e4\uc6e8\uc5b4\uc640-\uc778\uac00-\uaddc\uce59"},"22. ","[BackEnd]"," \uc778\uc99d \ubbf8\ub4e4\uc6e8\uc5b4\uc640 \uc778\uac00 \uaddc\uce59"),(0,a.kt)("h2",{id:"\ubaa9\ud45c"},"\ubaa9\ud45c"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\ud604\uc7ac \uc778\uc99d\uc774 \ub418\uba74 \ud1a0\ud070\uc740 \ubc1c\uae09\ud574\uc8fc\uc9c0\ub9cc \uadf8 \ud1a0\ud070\uc73c\ub85c \uc778\uac00\uc5d0 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \uc788\ub2e4."),(0,a.kt)("p",null,"\uc608\ub97c\ub4e4\uc5b4 \ub2e4\ub978 \uc0ac\uc6a9\uc790\uc758 \uacc4\uc88c \uc815\ubcf4\ub97c \ub9c8\uc74c\ub300\ub85c \ubcfc \uc218 \uc788\ub294 \uacbd\uc6b0"),(0,a.kt)("p",null,"\uadf8\ub798\uc11c \ud1a0\ud070\uc73c\ub85c \ud574\ub2f9 \uc0ac\uc6a9\uc790\ub97c \uc2dd\ubcc4\ud558\uace0 \uc0ac\uc6a9\uc790\ubcc4 \uad8c\ud55c\uc5d0 \ub9de\ub294 \uc815\ubcf4\ub97c \ubcf4\uc5ec\uc904 \uc218 \uc788\ub3c4\ub85d \ud574\uc57c \ud55c\ub2e4."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\uc0ac\uc6a9\uc790\uac00 \uc18c\uc720\ud55c \uacc4\uc815\ub9cc \uc870\ud68c")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\ud574\ub2f9 \ud1a0\ud070\uc758 \uc8fc\uc778\ub9cc fromAccount \ub418\ub3c4\ub85d"))),(0,a.kt)("h2",{id:"\ubbf8\ub4e4\uc6e8\uc5b4"},"\ubbf8\ub4e4\uc6e8\uc5b4"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"authmiddleware"},"authMiddleware"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func authMiddleware(tokenMaker token.MakerForPaseto) gin.HandlerFunc {\n    return func(ctx *gin.Context) {\n        authorizationHeader := ctx.GetHeader(authorizationHeaderKey)\n\n        // \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c authorization \ud5e4\ub354 \uc81c\uacf5 \uc548\ud558\ub294 \uacbd\uc6b0\n        if len(authorizationHeader) == 0 {\n            err := errors.New("[ERR] AUTHORIZATION HEADER IS NOT PROVIDED")\n\n            // \uc694\uccad \uc911\ub2e8\ud558\uace0 \uc0c1\ud0dc\ucf54\ub4dc\uc640 json \ubcf4\ub0c4\n            ctx.AbortWithStatusJSON(http.StatusUnauthorized, errorResponse(err))\n            return\n        }\n\n        // authorization \uac12 \uacf5\ubc31\uc73c\ub85c \uad6c\ubd84\ud574\uc57c \ud568\n        // Bearer abcdefg... \ub85c \ud0a4\uac00 \uc785\ub825\ubc1b\uc544\uc11c fields[0]\uc5d0\ub294 Bearer fields[1]\uc5d0\ub294 \ud1a0\ud070\uac12\uc774 \ub4e4\uc5b4\uac08 \uac83\uc784.\n        fields := strings.Fields(authorizationHeader)\n        if len(fields) < 2 {\n            err := errors.New("[ERR] INVALID AUTHORIZATION HEADER FORMAT")\n\n            // \uc694\uccad \uc911\ub2e8\ud558\uace0 \uc0c1\ud0dc\ucf54\ub4dc\uc640 json \ubcf4\ub0c4\n            ctx.AbortWithStatusJSON(http.StatusUnauthorized, errorResponse(err))\n            return\n        }\n\n        // \uc778\uc99d \ud0c0\uc785 \ube44\uad50\n        authorizationType := strings.ToLower(fields[0])\n        // \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 \uc778\uc99d \ud0c0\uc785\uc77c \uacbd\uc6b0\n        if authorizationType != authorizationTypeBearer {\n            err := fmt.Errorf("[ERR] UNSUPPORTED AUTHORIZATION TYPE %s", authorizationType)\n            ctx.AbortWithStatusJSON(http.StatusUnauthorized, errorResponse(err))\n            return\n        }\n\n        // \uc561\uc138\uc2a4 \ud1a0\ud070 \ucd94\ucd9c\n        accessToken := fields[1]\n        // \ud1a0\ud070 \uc720\ud6a8 \uac80\uc99d\n        payload, err := tokenMaker.VerifyToken(accessToken)\n        // \ud1a0\ud070 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc73c\uba74 \uc5d0\ub7ec\n        if err != nil {\n            ctx.AbortWithStatusJSON(http.StatusUnauthorized, errorResponse(err))\n            return\n        }\n\n        // context\uc5d0 payload \uc800\uc7a5\n        ctx.Set(authorizationPayloadKey, payload)\n        // \ub2e4\uc74c \ud578\ub4e4\ub7ec \ud638\ucd9c\n        ctx.Next()\n    }\n}\n')),(0,a.kt)("h3",{id:"servergo"},"server.go"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func (server *Server) setupRouter() {\n    router := gin.Default()\n\n    // \ubcf4\uc548 \ubbf8\ub4e4\uc6e8\uc5b4 \ucd94\uac00\n    // \uc774 route\ub85c \uc694\uccad \uc3d8\uba74 \uc774 \ubbf8\ub4e4\uc6e8\uc5b4\ub97c \uac70\uccd0\uc57c \ud55c\ub2e4.\n    authRoutes := router.Group("/").Use(authMiddleware(server.tokenMaker))\n\n    // \uacc4\uc815 \uc0dd\uc131\n    authRoutes.POST("/accounts", server.createAccount)\n    // \uacc4\uc815 \uc870\ud68c by ID\n    authRoutes.GET("/accounts/:id", server.getAccount)\n    // \uc5ec\ub7ec \uacc4\uc815 \uc870\ud68c\n    authRoutes.GET("/accounts", server.listAccount)\n    // \uacc4\uc815 \uc5c5\ub370\uc774\ud2b8\n    authRoutes.PUT("/accounts/:id", server.updateAccount)\n    // \uacc4\uc815 \uc0ad\uc81c\n    authRoutes.DELETE("/accounts/:id", server.deleteAccount)\n    // \uc1a1\uae08\n    authRoutes.POST("/transfers", server.createTransfer)\n\n    // \uc720\uc800 \uc0dd\uc131\n    router.POST("/users", server.createUser)\n    // \ub85c\uadf8\uc778\n    router.POST("/users/login", server.loginUser)\n\n    server.router = router\n}\n')),(0,a.kt)("p",null,"authRoutes\ub97c \uc0ac\uc6a9\ud558\ub294 \uc694\uccad\uc740 \uc778\uc99d \ubbf8\ub4e4\uc6e8\uc5b4\ub97c \uac70\uce5c\ub2e4. \uadf8\ub798\uc11c \uc778\uc99d \ud1a0\ud070\uc774 \ud544\uc218\ub85c \ud544\uc694\ud55c api\uac00 \ub41c\ub2e4."),(0,a.kt)("h2",{id:"\uc778\uc99d-\uaddc\uce59"},"\uc778\uc99d \uaddc\uce59"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"create-account"},"create account"),(0,a.kt)("p",null,"\ub85c\uadf8\uc778\ud55c \uc0ac\uc6a9\uc790\ub294 \uc790\uc2e0\uc774 \uc18c\uc720\uc790\uc778 \uacc4\uc815\ub9cc \ub9cc\ub4e4 \uc218 \uc788\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'type CreateAccountRequest struct {\n    Currency string `json:"currency" binding:"required,currency"`\n}\n\nfunc (server *Server) createAccount(ctx *gin.Context) {\n    .\n    .\n    .\n\n    // \ud574\ub2f9 \ud0a4\uc758 \uac12\uc744 authPayload\uc5d0 \uc800\uc7a5\n    // \uc778\ud130\ud398\uc774\uc2a4\ub85c \ubc18\ud658\ud558\uae30\uc5d0 \ud615\ubcc0\ud658\ud568\n    authPayload := ctx.MustGet(authorizationPayloadKey).(*token.PasetoPayload)\n    // \uc778\uc790 \uc0dd\uc131\n    arg := db.CreateAccountParams{\n        Owner:    authPayload.Username,\n        Currency: req.Currency,\n        Balance:  0,\n    }\n    .\n    .\n}\n')),(0,a.kt)("p",null,"MustGet\uc73c\ub85c \uc124\uc815\ud55c \ud0a4\uac12\uc758 \ud398\uc774\ub85c\ub4dc\ub97c \uac00\uc838\uc640\uc11c owner\ub97c \uc124\uc815\ud588\uc2b5\ub2c8\ub2e4."),(0,a.kt)("h3",{id:"get-account"},"get account"),(0,a.kt)("p",null,"\ub85c\uadf8\uc778\ud55c \uc0ac\uc6a9\uc790\ub294 \uc790\uc2e0\uc758 \uacc4\uc815\ub9cc \uc870\ud68c\ud560 \uc218 \uc788\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'    .\n    .\n    authPayload := ctx.MustGet(authorizationPayloadKey).(*token.PasetoPayload)\n    if authPayload.Username != account.Owner {\n        err := errors.New("[ERR] IT IS NOT YOUR ACCOUNT")\n        ctx.JSON(http.StatusUnauthorized, errorResponse(err))\n        return\n    }\n    .\n    .\n')),(0,a.kt)("p",null,"\ud398\uc774\ub85c\ub4dc \uac00\uc838\uc640\uc11c \uc870\ud68c\ud55c \uacc4\uc815\uacfc \ube44\uad50 \ud6c4 owner \ub2e4\ub974\uba74 401 \ubc18\ud658\ud55c\ub2e4."),(0,a.kt)("h3",{id:"list-account"},"list account"),(0,a.kt)("p",null,"\ub85c\uadf8\uc778\ud55c \uc0ac\uc6a9\uc790\ub294 \uc790\uc2e0\uc758 \uacc4\uc815\ub4e4\ub9cc \uc870\ud68c\ud560 \uc218 \uc788\ub2e4."),(0,a.kt)("p",null,"sql\ubd80\ud130 \ubc14\uafd4\uc57c \ud55c\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"-- name: ListAccounts :many\nSELECT * FROM accounts\nWHERE owner = $1\nORDER BY id\nLIMIT $2\nOFFSET $3;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},".\n.\n.\n    authPayload := ctx.MustGet(authorizationPayloadKey).(*token.PasetoPayload)\n\n    arg := db.ListAccountsParams{\n        Owner:  authPayload.Username,\n        Limit:  req.PageSize,\n        Offset: (req.PageID - 1) * req.PageSize,\n    }\n.\n.\n.\n")),(0,a.kt)("p",null,"\uac04\ub2e8\ud569\ub2c8\ub2e4."),(0,a.kt)("h3",{id:"transfer-money"},"transfer money"),(0,a.kt)("p",null,"\uc790\uc2e0\uc758 \uacc4\uc88c\uc5d0\uc11c\ub9cc \uc1a1\uae08 \uac00\ub2a5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'.\n.\n.\n    fromAccount, valid := server.validAccount(ctx, req.FromAccountID, req.Currency)\n\n    if !valid {\n        return\n    }\n\n    authPayload := ctx.MustGet(authorizationPayloadKey).(*token.PasetoPayload)\n    if authPayload.Username != fromAccount.Owner {\n        err := errors.New("[ERR] FROM ACCOUNT IS NOT YOURS")\n        ctx.JSON(http.StatusUnauthorized, errorResponse(err))\n        return\n    }\n\n    _, valid = server.validAccount(ctx, req.ToAccountID, req.Currency)\n    if !valid {\n        return\n    }\n.\n.\n.\n\n\nfunc (server *Server) validAccount(ctx *gin.Context, accountID int64, currency string) (db.Account, bool) {\n    // \uc544\uc774\ub514 \uc720\ud6a8 \ud655\uc778\n    account, err := server.store.GetAccount(ctx, accountID)\n    if err != nil {\n        if err == sql.ErrNoRows {\n            ctx.JSON(http.StatusNotFound, errorResponse(err)) //ID \uc5c6\uc744 \ub54c 404\n            return db.Account{}, false\n        }\n\n        ctx.JSON(http.StatusInternalServerError, errorResponse(err)) // \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc11c\ubc84 \uc5d0\ub7ec\n        return db.Account{}, false\n    }\n    .\n    .\n}\n')))}p.isMDXComponent=!0}}]);