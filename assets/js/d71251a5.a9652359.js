"use strict";(self.webpackChunkblogsaurus=self.webpackChunkblogsaurus||[]).push([[9880],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=p(r),d=l,f=s["".concat(u,".").concat(d)]||s[d]||m[d]||a;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[s]="string"==typeof e?e:l,o[1]=i;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},81023:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(87462),l=(r(67294),r(3905));const a={slug:"flutter-til-8",title:"Flutter TIL - 8",authors:["kihyun"],tags:["TIL","\ud50c\ub7ec\ud130","flutter","dart","tree-view"]},o="Flutter TIL - 8",i={permalink:"/blog/flutter-til-8",editUrl:"https://github.com/kihyun1998/blogsaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-01-03-til8/index.md",source:"@site/blog/2024-01-03-til8/index.md",title:"Flutter TIL - 8",description:"---",date:"2024-01-03T00:00:00.000Z",formattedDate:"January 3, 2024",tags:[{label:"TIL",permalink:"/blog/tags/til"},{label:"\ud50c\ub7ec\ud130",permalink:"/blog/tags/\ud50c\ub7ec\ud130"},{label:"flutter",permalink:"/blog/tags/flutter"},{label:"dart",permalink:"/blog/tags/dart"},{label:"tree-view",permalink:"/blog/tags/tree-view"}],readingTime:.62,hasTruncateMarker:!1,authors:[{name:"Park Ki Hyun",title:"Deveploper",url:"https://github.com/kihyun1998",imageURL:"https://github.com/kihyun1998.png",key:"kihyun"}],frontMatter:{slug:"flutter-til-8",title:"Flutter TIL - 8",authors:["kihyun"],tags:["TIL","\ud50c\ub7ec\ud130","flutter","dart","tree-view"]},prevItem:{title:"Flutter TIL - 9",permalink:"/blog/flutter-til-9"},nextItem:{title:"Git - LF will be replaced by CRLF the next time Git touches it",permalink:"/blog/git-error-1"}},u={authorsImageUrls:[void 0]},p=[{value:"Treeview",id:"treeview",level:2}],c={toc:p},s="wrapper";function m(e){let{components:t,...r}=e;return(0,l.kt)(s,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"treeview"},"Treeview"),(0,l.kt)("hr",null),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://pub.dev/packages/animated_tree_view"},"\uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac"),"\ub97c \uc0ac\uc6a9\ud55c\ub2e4."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"animated_tree_view"),"\ub2e4."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"TreeNode.root"),"\uc5d0 ",(0,l.kt)("inlineCode",{parentName:"p"},"..addAll([])")," \ud574\uc11c \ubc30\uc5f4\uc744 \ub123\uc744 \uc218 \uc788\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-dart"},'  final myTree = TreeNode.root()\n    ..addAll([\n      TreeNode(key: "Today"),\n      TreeNode(key: "Tomorrow")\n        ..addAll([\n          TreeNode(key: "task 1"),\n          TreeNode(key: "task 2"),\n          TreeNode(key: "task 3"),\n        ]),\n      TreeNode(key: "Upcoming"),\n    ]);\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"TreeView.simple"),"\uc744 \uc0ac\uc6a9\ud574\ubd24\ub294\ub370 builder\uc5d0\uc11c \uc778\uc790\ub85c ",(0,l.kt)("inlineCode",{parentName:"p"},"context"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"node"),"\ub97c \ubc1b\ub294\ub2e4."),(0,l.kt)("p",null,"\uc8fc\uc758\ud560 \uc810\uc740 key\ub85c \ud558\uae30 \ub54c\ubb38\uc5d0 key \uc911\ubcf5\ub418\uc9c0 \uc54a\uac8c \uc870\uc2ec\ud574\uc57c\ud55c\ub2e4. \uac19\uc740 level\ub9cc \uc544\ub2c8\uba74 \uad1c\ucc2e\ub2e4. (\uac19\uc740 level\uc544\ub2c8\uba74 \uc774\ub984 \uc911\ubcf5 \uac00\ub2a5)"))}m.isMDXComponent=!0}}]);