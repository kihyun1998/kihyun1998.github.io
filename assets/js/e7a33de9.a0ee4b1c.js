"use strict";(self.webpackChunkblogsaurus=self.webpackChunkblogsaurus||[]).push([[27261],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(t),u=a,k=m["".concat(i,".").concat(u)]||m[u]||d[u]||o;return t?r.createElement(k,l(l({ref:n},c),{},{components:t})):r.createElement(k,l({ref:n},c))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=u;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=e,p[m]="string"==typeof e?e:a,l[1]=p;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},87443:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const o={sidebar_position:26},l="26. [BackEnd] docker compose \uc0ac\uc6a9",p={unversionedId:"backend-master/backend26",id:"backend-master/backend26",title:"26. [BackEnd] docker compose \uc0ac\uc6a9",description:"docker compose\ub294 \ub2e8\uc77c \uc11c\ubc84\uc5d0\uc11c \uc5ec\ub7ec \uac1c\uc758 \ucee8\ud14c\uc774\ub108\ub97c \ud558\ub098\uc758 \uc11c\ube44\uc2a4\ub85c \uc815\uc758\ud574 \ucee8\ud14c\uc774\ub108 \ubb36\uc74c\uc73c\ub85c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \ub3c4\uad6c\uc785\ub2c8\ub2e4.",source:"@site/docs/backend-master/backend26.md",sourceDirName:"backend-master",slug:"/backend-master/backend26",permalink:"/docs/backend-master/backend26",draft:!1,tags:[],version:"current",sidebarPosition:26,frontMatter:{sidebar_position:26},sidebar:"backSidebar",previous:{title:"25. [BackEnd] \ub3c4\ucee4\uc640 AWS \ubc30\ud3ec - 2 ( go \ucee8\ud14c\uc774\ub108\uc640 DB \ucee8\ud14c\uc774\ub108 \ud1b5\uc2e0\ud558\uae30 )",permalink:"/docs/backend-master/backend25"},next:{title:"27. [BackEnd] GitHub Action\uc73c\ub85c \ub3c4\ucee4 \uc774\ubbf8\uc9c0 AWS\uc5d0 \uc790\ub3d9 \ube4c\ub4dc",permalink:"/docs/backend-master/backend27"}},i={},s=[{value:"docker compose \uc791\uc131\ud558\uae30",id:"docker-compose-\uc791\uc131\ud558\uae30",level:2},{value:"\uc2e4\ud589\ud558\uae30",id:"\uc2e4\ud589\ud558\uae30",level:2},{value:"db migrate \ucd94\uac00\ud558\uae30",id:"db-migrate-\ucd94\uac00\ud558\uae30",level:2},{value:"start.sh",id:"startsh",level:3},{value:"Dockerfile",id:"dockerfile",level:3},{value:"\ub2e4\uc2dc docker-compose \uc801\uc6a9\ud558\ub824\uba74",id:"\ub2e4\uc2dc-docker-compose-\uc801\uc6a9\ud558\ub824\uba74",level:2},{value:"\uc758\uc874\uc131 \ucd94\uac00",id:"\uc758\uc874\uc131-\ucd94\uac00",level:2},{value:"Dockerfile",id:"dockerfile-1",level:3},{value:"docker-compose.yaml",id:"docker-composeyaml",level:3},{value:"\ud558\uc9c0\ub9cc",id:"\ud558\uc9c0\ub9cc",level:3}],c={toc:s},m="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"26-backend-docker-compose-\uc0ac\uc6a9"},"26. ","[BackEnd]"," docker compose \uc0ac\uc6a9"),(0,a.kt)("p",null,"docker compose\ub294 \ub2e8\uc77c \uc11c\ubc84\uc5d0\uc11c \uc5ec\ub7ec \uac1c\uc758 \ucee8\ud14c\uc774\ub108\ub97c \ud558\ub098\uc758 \uc11c\ube44\uc2a4\ub85c \uc815\uc758\ud574 \ucee8\ud14c\uc774\ub108 \ubb36\uc74c\uc73c\ub85c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \ub3c4\uad6c\uc785\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"docker-compose-\uc791\uc131\ud558\uae30"},"docker compose \uc791\uc131\ud558\uae30"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"docker-compose.yaml \ud30c\uc77c\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/compose-file/"},"\uc774 \uacf3\uc5d0\uc11c")," \ub2e4\uc591\ud55c \ubb38\uc11c\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"service"),": \uc11c\ube44\uc2a4 \ubc11\uc5d0 \ub2e4\uc591\ud55c\ud0dc\uadf8\ub4e4\ub85c \uc791\uc131\ud569\ub2c8\ub2e4."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"image"),": \uc774\ubbf8\uc9c0"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"environment"),": \ud658\uacbd\ubcc0\uc218"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'services:\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      - POSTGRES_USER=root\n      - POSTGRES_PASSWORD=secret\n      - POSTGRES_DB=simple_bank\n  api:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    ports:\n      - "8080:8080"\n    environment:\n      - DB_SOURCE=postgresql://root:secret@postgres:5432/simple_bank?sslmode=disable\n')),(0,a.kt)("p",null,"\uc704\ucc98\ub7fc \uc791\uc131\ud560 \uc218 \uc788\uace0 \uc8fc\uc758\ud560 \uc810\uc740 DB_SOURCE\uc5d0\uc11c \uc544\uc774\ud53c \ub300\uc2e0 postgres\ub97c \uc0ac\uc6a9\ud574\uc11c \ud588\uc2b5\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"\uc2e4\ud589\ud558\uae30"},"\uc2e4\ud589\ud558\uae30"),(0,a.kt)("hr",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose up \n")),(0,a.kt)("p",null,"\ud558\uba74 \ub429\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"db-migrate-\ucd94\uac00\ud558\uae30"},"db migrate \ucd94\uac00\ud558\uae30"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"startsh"},"start.sh"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/sh\n\nset -e\n\necho "**run db migration**"\n/app/migrate -path /app/migration -database "$DB_SOURCE" -verbose up\n\necho "***start the app***"\nexec "$@"\n')),(0,a.kt)("p",null,"\uc54c\ud30c\uc778 \ub9ac\ub205\uc2a4\ub77c bash\uac00 \uc5c6\uc5b4\uc11c /bin/sh\uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,a.kt)("p",null,"set -e\ub294 \uc2e4\ud589 \uc2e4\ud328 \uc2dc \uc258\uc2a4\ud06c\ub9bd\ud2b8 \uc885\ub8cc \ud558\ub294 \uad6c\ubb38\uc785\ub2c8\ub2e4."),(0,a.kt)("p",null,"/app/migrate .. \ud558\ub294 \ubd80\ubd84\uc774 migrate up \ud558\ub294 \ubd80\ubd84\uc774\uace0"),(0,a.kt)("p",null,'exec "$@"\ub294 \ub4e4\uc5b4\uc628 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc2e4\ud589\ud558\ub294 \uc5ed\ud560\uc785\ub2c8\ub2e4.'),(0,a.kt)("p",null,"\uc5ec\ub2f4\uc73c\ub85c ",(0,a.kt)("inlineCode",{parentName:"p"},'exec "$@"'),"\uac00 \uc544\ub2cc ",(0,a.kt)("inlineCode",{parentName:"p"},'echo "$@"'),"\ub85c \uc791\uc131\ud574\uc11c 1\uc2dc\uac04\uc744 \ubc84\ub838\uc2b5\ub2c8\ub2e4."),(0,a.kt)("h3",{id:"dockerfile"},"Dockerfile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Build stage\nFROM golang:1.21-alpine3.18 AS builder\nWORKDIR /app\nCOPY . .\nRUN go build -o main main.go\nRUN apk add curl\nRUN curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz\n\n# Run stage\nFROM alpine:3.18\nWORKDIR /app\nCOPY --from=builder /app/main .\nCOPY --from=builder /app/migrate ./migrate\nCOPY app.env .\nCOPY start.sh .\nCOPY db/migration ./migration\n\nEXPOSE 8080\nCMD ["/app/main"]\nENTRYPOINT ["/app/start.sh"]\n')),(0,a.kt)("p",null,"\ub3c4\ucee4 \ud30c\uc77c\ub3c4 \ubc14\ub010 \ubd80\ubd84\uc774 \uc788\uc2b5\ub2c8\ub2e4. "),(0,a.kt)("p",null,"\uae30\ubcf8\uc801\uc73c\ub85c alpine \ub9ac\ub205\uc2a4\uc5d0\ub294 curl\uc774 \uc124\uce58\ub418\uc5b4\uc788\uc9c0 \uc54a\uc544\uc11c apk add curl\ud574\uc57c\ud569\ub2c8\ub2e4."),(0,a.kt)("p",null,"migrate \uc124\uce58\ud558\uace0 \uc62e\uae30\uace0.. \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud30c\uc77c\ub4e4\ub3c4 \uc62e\uae30\uace0 ENTRYPOINT\ub85c start.sh\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\ub294\ub370 \uc774\ub7ec\uba74 CMD\ub294 \uadf8\uc800 start.sh\ub85c \ub9e4\uac1c\ubcc0\uc218\ub85c \ub123\ub294 \uc5ed\ud560\ub85c \ubcc0\ud569\ub2c8\ub2e4. (ENTRYPOINT\uac00 \uc788\ub2e4\uba74)"),(0,a.kt)("h2",{id:"\ub2e4\uc2dc-docker-compose-\uc801\uc6a9\ud558\ub824\uba74"},"\ub2e4\uc2dc docker-compose \uc801\uc6a9\ud558\ub824\uba74"),(0,a.kt)("hr",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose down \n")),(0,a.kt)("p",null,"\ud574\uc57c \ud55c\ub2e4. \uadf8\ub7ec\uba74 docker compose up\uc73c\ub85c \uc0dd\uae34 \uac83\ub4e4 \uc0ad\uc81c\ud568"),(0,a.kt)("h2",{id:"\uc758\uc874\uc131-\ucd94\uac00"},"\uc758\uc874\uc131 \ucd94\uac00"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"postgres db\uac00 \uc62c\ub77c\uc624\ub294 \uc2dc\uac04\uc774 \uac78\ub9ac\uae30\ub54c\ubb38\uc5d0 migrate \uc2e4\ud328\ud568."),(0,a.kt)("p",null,"\uc774\uc5d0 \ub300\ud55c \uc758\uc874\uc131 \ucd94\uac00\ud558\ub294 \ubc29\ubc95\uc774 \uc788\ub2e4."),(0,a.kt)("p",null,"\uba3c\uc800 ",(0,a.kt)("inlineCode",{parentName:"p"},"wait-for")," \uc2a4\ud06c\ub9bd\ud2b8\ub97c \ub2e4\uc6b4\ub85c\ub4dc \ud55c\ub2e4."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/eficode/wait-for"},"\uc5ec\uae30"),"\uc5d0\uc11c \ub2e4\uc6b4\ub85c\ub4dc\ud558\uba74 \ub41c\ub2e4."),(0,a.kt)("p",null,"\uadf8\ub9ac\uace0 \ub2f9\uc5f0\ud788 \ud504\ub85c\uc81d\ud2b8 root path\ub85c \uc62e\uae34\ub2e4."),(0,a.kt)("h3",{id:"dockerfile-1"},"Dockerfile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Build stage\nFROM golang:1.21-alpine3.18 AS builder\nWORKDIR /app\nCOPY . .\nRUN go build -o main main.go\nRUN apk add curl\nRUN curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz\n\n# Run stage\nFROM alpine:3.18\nWORKDIR /app\nCOPY --from=builder /app/main .\nCOPY --from=builder /app/migrate ./migrate\nCOPY app.env .\nCOPY start.sh .\nCOPY wait-for.sh .\nCOPY db/migration ./migration\n\nEXPOSE 8080\nCMD ["/app/main"]\nENTRYPOINT ["/app/start.sh"]\n')),(0,a.kt)("p",null,"\uadf8\ub9ac\uace0 \ubcf5\uc0ac\ub97c \ud558\uad6c\uc694"),(0,a.kt)("h3",{id:"docker-composeyaml"},"docker-compose.yaml"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'services:\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      - POSTGRES_USER=root\n      - POSTGRES_PASSWORD=secret\n      - POSTGRES_DB=simple_bank\n  api:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    ports:\n      - "8080:8080"\n    environment:\n      - DB_SOURCE=postgresql://root:secret@postgres:5432/simple_bank?sslmode=disable\n    depends_on:\n      - postgres\n    entrypoint: ["/app/wait-for.sh","postgres:5432","--","/app/start.sh"]\n    command: ["/app/main"]\n')),(0,a.kt)("p",null,"\uc5ec\uae30\uc5d0\uc11c entrypoint\ub97c \ub123\uc5c8\uae30 \ub54c\ubb38\uc5d0 dockerfile\uc758 entrypoint\ub294 \ubb34\uc2dc\uac00\ub418\uc5b4\uc11c command\ub85c /app/main\uc744 \ucd94\uac00\ud574\uc57c\ud55c\ub2e4\uace0 \ud569\ub2c8\ub2e4."),(0,a.kt)("h3",{id:"\ud558\uc9c0\ub9cc"},"\ud558\uc9c0\ub9cc"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title='docker-compose.yaml'",title:"'docker-compose.yaml'"},'services:\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      - POSTGRES_USER=root\n      - POSTGRES_PASSWORD=secret\n      - POSTGRES_DB=simple_bank\n  api:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    ports:\n      - "8080:8080"\n    environment:\n      - DB_SOURCE=postgresql://root:secret@postgres:5432/simple_bank?sslmode=disable\n    depends_on:\n      - postgres\n    links:\n      - postgres\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title='Dockerfile'",title:"'Dockerfile'"},'# Build stage\nFROM golang:1.21-alpine3.18 AS builder\nWORKDIR /app\nCOPY . .\nRUN go build -o main main.go\nRUN apk add curl\nRUN curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz\n\n# Run stage\nFROM alpine:3.18\nWORKDIR /app\nCOPY --from=builder /app/main .\nCOPY --from=builder /app/migrate ./migrate\nCOPY app.env .\nCOPY start.sh .\nCOPY wait-for.sh .\nCOPY db/migration ./migration\n\nEXPOSE 8080\nCMD ["/app/main"]\nENTRYPOINT ["/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh"]\n')),(0,a.kt)("p",null,"\uc774\ub807\uac8c \ud574\ub3c4 \ub418\ub294\uac70 \uac19\uc544\uc694"))}d.isMDXComponent=!0}}]);