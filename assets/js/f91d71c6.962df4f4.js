"use strict";(self.webpackChunkblogsaurus=self.webpackChunkblogsaurus||[]).push([[9446],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),f=l,g=p["".concat(s,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:l,o[1]=i;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},49927:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(87462),l=(n(67294),n(3905));const a={sidebar_position:40},o="40. [flutter] Isolate\ub85c dll \ud568\uc218 \ud638\ucd9c",i={unversionedId:"flutter/flutter40",id:"flutter/flutter40",title:"40. [flutter] Isolate\ub85c dll \ud568\uc218 \ud638\ucd9c",description:"---",source:"@site/docs/flutter/flutter40.md",sourceDirName:"flutter",slug:"/flutter/flutter40",permalink:"/docs/flutter/flutter40",draft:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"dartSidebar",previous:{title:"39. [flutter] toJson, fromJson",permalink:"/docs/flutter/flutter39"},next:{title:"01. [KOSTA] \ud50c\ub7ec\ud130 \uad50\uc721 - 1\ud68c\ucc28",permalink:"/docs/flutter-kosta/kosta1"}},s={},u=[{value:"Isolate",id:"isolate",level:2},{value:"\uacfc\uc815",id:"\uacfc\uc815",level:2},{value:"dll",id:"dll",level:3},{value:"isolate",id:"isolate-1",level:3}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,l.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"40-flutter-isolate\ub85c-dll-\ud568\uc218-\ud638\ucd9c"},"40. ","[flutter]"," Isolate\ub85c dll \ud568\uc218 \ud638\ucd9c"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"isolate"},"Isolate"),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Isolate\ub294 \uc4f0\ub808\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ubcd1\ub839\uc791\uc5c5\uc5d0 \uc6a9\uc774\ud569\ub2c8\ub2e4."),(0,l.kt)("h2",{id:"\uacfc\uc815"},"\uacfc\uc815"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"dll"},"dll"),(0,l.kt)("p",null,"\ud3c9\uc18c\ucc98\ub7fc dll imprt \ud558\uace0 dll \ud568\uc218\ub97c \uc120\uc5b8\ud569\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"isolate-1"},"isolate"),(0,l.kt)("p",null,"\ud574\ub2f9 \ud568\uc218\ub97c isolate\ud558\uac8c \ud638\ucd9c\ud558\ub294 \ud568\uc218\ub97c \uc120\uc5b8\ud569\ub2c8\ub2e4. \uc544\ub798\ub294 \uc608\uc81c \ucf54\ub4dc\uc785\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-dart"},"final class DllValue extends Struct {\n  external Pointer<Utf8> text;\n\n  @Int8()\n  external int check;\n}\n\nclass DartValue {\n  String text;\n  bool check;\n  DartValue({\n    required this.text,\n    required this.check,\n  });\n}\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-dart"},"final dll = DynamicLibrary.open('Dll.dll');\n\ntypedef CallDialNative = GoResValue Function(\n    Pointer<Utf8> arg1, Pointer<Utf8> arg2);\ntypedef CallDialDart = GoResValue Function(Pointer<Utf8> arg1, Pointer<Utf8> arg2);\n\nclass Dllfunc {\n  static final CallDialDart dial =\n      dll.lookupFunction<CallDialNative, CallDialDart>('dial');\n}\n\n.\n.\n.\n\n\n  void callFunc(SendPort sendPort) async {\n    // \uc0c8\ub85c\uc6b4 ReceivePort \uc0dd\uc131\n    ReceivePort port = ReceivePort();\n    // \uba54\uc778 Isolate\uc5d0 sendPort \ubcf4\ub0c4\n    sendPort.send(port.sendPort); \n\n    // \uc0c8\ub85c\uc6b4 ReceivePort\uc5d0\uc11c \uba54\uc2dc\uc9c0 \uc218\uc2e0 \ub300\uae30\n    await for (var msg in port) {\n      List<dynamic> args = msg;\n      String arg1Str = args[0];\n      String arg2Str = args[1];\n      SendPort replyTo = args[2];\n\n      final Pointer<Utf8> arg1 = arg1Str.toNativeUtf8();\n      final Pointer<Utf8> arg2 = arg2Str.toNativeUtf8();\n\n      // Comm.dial \ud568\uc218 \ud638\ucd9c\n      DllValue result = Comm.dial(arg1, arg2);\n      final rst = DartValue(\n        msg: result.text.toDartString(),\n        ok: result.check == 0 ? false : true,\n      );\n      replyTo.send(rst);\n\n      calloc.free(arg1);\n      calloc.free(arg2);\n      port.close();\n    }\n  }\n")),(0,l.kt)("p",null,"\uae30\ubcf8\uc801\uc73c\ub85c \uc704 \ucc98\ub7fc \uc791\uc131\ud558\uba74 \ub41c\ub2e4."),(0,l.kt)("p",null,"\ucc98\uc74c\uc5d0 ReceviePort\ub97c \uc120\uc5b8\ud574\uc11c sendPort\ub97c \ud569\ub2c8\ub2e4. (\uba54\uc778 Isolate\uc5d0 sendPort\ub97c \ud558\ub294 \uac83\uc774\ub2e4.)"),(0,l.kt)("p",null,"\uadf8\ub9ac\uace0 \uc778\uc790\uac12\uc744 \ubc1b\uae30 \uc704\ud55c \uc218\uc2e0 \ub300\uae30\ub97c \ud55c\ub2e4."),(0,l.kt)("p",null,"\uc5ec\uae30\uc11c ",(0,l.kt)("strong",{parentName:"p"},"\uc911\uc694\ud55c \ubd80\ubd84"),"\uc740 \ucc98\uc74c\ubd80\ud130 ",(0,l.kt)("inlineCode",{parentName:"p"},"Pointer<UTF8>"),"\ub85c \ubc1b\uc9c0 \uc54a\uc740 \uac83\uc774\ub2e4."),(0,l.kt)("p",null,"\uadf8 \uc774\uc720\ub294 Isolate\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"int"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"bool"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"List"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Map")," \ub4f1 \uae30\ubcf8\uc801\uc778 \ud0c0\uc785\ub9cc \uc9c0\uc6d0\ud558\uae30 \ub54c\ubb38\uc774\ub2e4. "),(0,l.kt)("p",null,"\uadf8\ub798\uc11c \uadf8\ub0e5 \ubc1b\uace0 \uc548\uc5d0\uc11c \ud615\ubcc0\ud658\ud574\uc11c \ucc98\ub9ac\ud558\uace0 \ub2e4\uc2dc \ud615\ubcc0\ud658\ud574\uc11c return\ud558\ub294 \uad6c\uc870\uc774\ub2e4."),(0,l.kt)("p",null,"\uadf8\ub9ac\uace0 \uc0ac\uc6a9\ud55c Pointer\ub294 free\ub3c4 \ud574\uc8fc\uace0 \ud558\uba74 \ub41c\ub2e4."),(0,l.kt)("p",null,"\uc704\ub294 Isolate\ub97c \uc0ac\uc6a9\ud574\uc11c \ud568\uc218\ub97c \ud638\ucd9c\ud558\ub294 \ucf54\ub4dc\uace0 \uc544\ub798\ub294 \ud638\ucd9c\ud55c \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \ucf54\ub4dc\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-dart"},'  Future<ResValue> dialInIsolate(String arg1, String arg2) async {\n     // \uba54\uc778 Isolate\uc758 ReceivePort \uc0dd\uc131\n    ReceivePort receivePort = ReceivePort();\n\n    // \uc0c8 Isolate \uc0dd\uc131 \ubc0f callDial \ud568\uc218 \uc2e4\ud589\n    await Isolate.spawn(callFunc, receivePort.sendPort);\n\n    // \uccab \ubc88\uc9f8 \uba54\uc2dc\uc9c0\ub85c\ubd80\ud130 \uc0c8 Isolate\uc758 SendPort \ubc1b\uae30\n    SendPort sendPort = await receivePort.first as SendPort;\n\n    // \uacb0\uacfc\ub97c \ubc1b\uae30 \uc704\ud55c \uc0c8 ReceivePort\n    ReceivePort response = ReceivePort();\n\n    // \uc0c8 Isolate\uc5d0 \uc791\uc5c5 \uc694\uccad \ubcf4\ub0b4\uae30 (\ud568\uc218 \uc778\uc790\uc640 \uacb0\uacfc\ub97c \ubc1b\uc744 SendPort \ud3ec\ud568)\n    sendPort.send([arg1, arg2, response.sendPort]);\n\n    // \uc0c8 Isolate\ub85c\ubd80\ud130\uc758 \uc751\ub2f5 \uae30\ub2e4\ub9bc\n    final result = await response.first;\n\n    return result;\n  }\n\n.\n.\n.\n\n  onPressed: () async {\n    final res = await connect.dialInIsolate(\n      "arg1",\n      "arg2",\n    );\n    print(res.text);\n    print(res.check);\n  },\n')),(0,l.kt)("p",null,"\uc704\ub294 main\uc5d0\uc11c \uc0ac\uc6a9\ud560 \ud568\uc218\uc774\ub2e4."),(0,l.kt)("p",null,"\uc774\ub807\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4."))}d.isMDXComponent=!0}}]);