"use strict";(self.webpackChunkblogsaurus=self.webpackChunkblogsaurus||[]).push([[6773],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||l;return t?n.createElement(f,i(i({ref:r},u),{},{components:t})):n.createElement(f,i({ref:r},u))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var l=t.length,i=new Array(l);i[0]=m;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a[d]="string"==typeof e?e:o,i[1]=a;for(var p=2;p<l;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},58774:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>a,toc:()=>p});var n=t(87462),o=(t(67294),t(3905));const l={sidebar_position:3},i="[LLM] 3. GPT \ubaa8\ub378 \uac1c\uc694 \ubc0f \uc2e4\uc2b5",a={unversionedId:"llm/llm3",id:"llm/llm3",title:"[LLM] 3. GPT \ubaa8\ub378 \uac1c\uc694 \ubc0f \uc2e4\uc2b5",description:"---",source:"@site/docs/llm/llm3.md",sourceDirName:"llm",slug:"/llm/llm3",permalink:"/docs/llm/llm3",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"aiSidebar",previous:{title:"[LLM] 2. Transformer \uc544\ud0a4\ud14d\ucc98 \ubc0f \uae30\ubcf8 \uac1c\ub150",permalink:"/docs/llm/llm2"}},c={},p=[{value:"GPT \ubaa8\ub378\uc774\ub780",id:"gpt-\ubaa8\ub378\uc774\ub780",level:2},{value:"GPT \ubaa8\ub378 \uc2e4\uc2b5 TOY \ubaa8\ub378",id:"gpt-\ubaa8\ub378-\uc2e4\uc2b5-toy-\ubaa8\ub378",level:3}],u={toc:p},d="wrapper";function s(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"llm-3-gpt-\ubaa8\ub378-\uac1c\uc694-\ubc0f-\uc2e4\uc2b5"},"[LLM]"," 3. GPT \ubaa8\ub378 \uac1c\uc694 \ubc0f \uc2e4\uc2b5"),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"gpt-\ubaa8\ub378\uc774\ub780"},"GPT \ubaa8\ub378\uc774\ub780"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"GPT\ub294 ",(0,o.kt)("strong",{parentName:"p"},"Generative Pre-trained Transformer"),"\uc758 \uc57d\uc790\uc785\ub2c8\ub2e4. GPT\ub294 autoregressive \ubc29\uc2dd\uc73c\ub85c \uc67c\ucabd\uc5d0\uc11c \uc624\ub978\ucabd\uc73c\ub85c \ubb38\uc7a5\uc744 \uc608\uce21\ud569\ub2c8\ub2e4."),(0,o.kt)("h3",{id:"gpt-\ubaa8\ub378-\uc2e4\uc2b5-toy-\ubaa8\ub378"},"GPT \ubaa8\ub378 \uc2e4\uc2b5 TOY \ubaa8\ub378"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import random\n\ncorpus = [\n    "\uc624\ub298 \ub0a0\uc528\uac00 \ub9d1\ub2e4",\n    "\uc624\ub298 \ub0a0\uc528\uac00 \ud750\ub9ac\ub2e4",\n    "\uc624\ub298 \ub0a0\uc528\uac00 \ucda5\ub2e4",\n    "\uc624\ub298 \uae30\ubd84\uc774 \uc88b\ub2e4",\n    "\uc624\ub298 \uae30\ubd84\uc774 \ub098\uc058\ub2e4"\n]\n\n# \ub2e8\uc5b4 \uc0ac\uc804 \ub9cc\ub4e4\uae30\nword_dict = {}\nfor sentence in corpus:\n    words = sentence.split()\n    for i in range(len(words)-1):\n        key,value = words[i], words[i+1]\n        if key not in word_dict:\n            word_dict[key] = []\n        word_dict[key].append(value)\n\n# \ub2e4\uc74c \ub2e8\uc5b4 \uc608\uce21 \ud568\uc218\ndef predict_next_word(word):\n    if word in word_dict:\n        return random.choice(word_dict[word])\n    else:\n        return "?"\n    \n# \ub2e8\uc5b4 \uc608\uce21\ninput_word = "\uc624\ub298"\npredicted_word = predict_next_word(input_word)\nprint(f"\'{input_word}\' \ub2e4\uc74c\uc5d0 \uc62c \ub2e8\uc5b4\ub294: \'{predicted_word}\'")\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u2705 \uc2e4\ud589 \uc608\uc2dc")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"'\uc624\ub298' \ub2e4\uc74c\uc5d0 \uc62c \ub2e8\uc5b4\ub294: '\uae30\ubd84\uc774'\n'\uc624\ub298' \ub2e4\uc74c\uc5d0 \uc62c \ub2e8\uc5b4\ub294: '\ub0a0\uc528\uac00'\n")))}s.isMDXComponent=!0}}]);